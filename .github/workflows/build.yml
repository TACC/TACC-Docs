name: TACC Docs Build

on:
  workflow_dispatch:
    inputs:
      runs_on:
        required: false
        default: 'ubuntu-latest' # default for manual run
        type: choice
        options:
        - ubuntu-latest
        - macos-latest
  push:
    branches:
      - main

jobs:
  docker:
    # default for automatic run on 'push'
    runs-on: ${{ github.event_name == 'push' && 'ubuntu-latest' || inputs.runs_on }}
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-tags: true
      -
        name: Get shortsha and branch name
        id: vars
        run: |
          if [ -z "$EVENT_SHA" ]; then SHORT_SHA=${GITHUB_SHA::8}; else SHORT_SHA=${EVENT_SHA::8}; fi
          echo ::set-output name=sha_short::${SHORT_SHA}
          VERSION=`git describe --exact-match --tags`
          if [ -n "$VERSION" ]; then VERSION="noversion"; fi
          echo ::set-output name=version::${VERSION}
          BRANCH_SHORT=`git symbolic-ref --short HEAD | sed 's/[^[:alnum:]\.\_\-]/-/g'`
          echo ::set-output name=branch_short::${BRANCH_SHORT}
        env:
          EVENT_SHA: ${{ github.event.client_payload.sha }}
      - name: Print vars
        run: |
          echo $SHORTSHA
          echo $VERSION
          echo $BRANCH_SHORT
        env:
          SHORTSHA: ${{ steps.vars.outputs.sha_short }}
          VERSION: ${{ steps.vars.outputs.version }}
          BRANCH_SHORT: ${{ steps.vars.outputs.branch_short }}
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: taccwma/tacc-docs:latest,taccwma/tacc-docs:${{ steps.vars.outputs.sha_short }},taccwma/tacc-docs:${{ steps.vars.outputs.version }},taccwma/tacc-docs:${{ steps.vars.outputs.branch_short }}
      -
        name: Post build status in slack
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # This data can be any valid JSON from a previous step in the GitHub Action
          payload: |
            {
              "build_status": "${{ job.status }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
